[[PageOutline(2-999, Zugriff auf das Subversion-Repository)]]

= Zugriff auf das Subversion-Repository mit Eclipse =

== Import des Codes ==

Die Quelltexte von c't-Bot und c't-Sim sind im [source: SVN-Repository] erhältlich, und zwar in zwei '''Zweigen''' (Varianten): Falls eigener Bot-Steuercode entwickelt werden soll, ist der stabilere Code aus dem Zweig [source:stable stable] richtig. Falls Patches zur Weiterentwicklung des Sim oder der c't-Bot-Infrastruktur geschrieben werden sollen, empfiehlt sich der aktuellere Enwicklerzweig [source:devel].

Der gewünschte Zweig kann beim Importieren des Codes in Eclipse angegeben werden (siehe unten); falls man zu einem späteren Zeitpunkt wechseln möchte, kann man in Eclipse nach Rechtsklick auf das Projekt den Menüpunkt „!Team/Switch to Another Branch or Version“ wählen. Natürlich können falls gewünscht in Eclipse zwei Projekte angelegt werden, um das eine mit dem Zweig devel und das andere mit dem Zweig stable herunterzuladen.

   1. Internetverbindung herstellen
   1. Menüpunkt „File“ „Import“
   1. Option „SVN“ "Checkout Projects from SVN"
   1. Falls nötig: „Create a new repository location“
      * URL: '''!https://www.heise.de/svn/ctbot'''
      * (evtl. kommt beim Verbinden eine Fehlermeldung das Zertifikat betreffend)
   1. Den gewünschten Zweig aussuchen (Bitte immer die Markierung auf ct-Bot oder ct-Sim setzen, da sich in jedem Zweig beide Projekte befinden [[Image(branch.png,200)]]
   1. Noch ein paar mal "Next" und "Finish" klicken und das war es dann
   1. Beim Auschecken von c't-Bot müssen ggf. noch die korrekten Pfade zu Hilfswerkzeugen eingestellt werden:
          * Das Projekt mit „!Project/Clean...“ für den Simulator compilieren und prüfen, ob dann im Projektverzeichnis die Datei ''Debug-Linux/'''ct-Bot''''' (Linux) bzw. ''Debug-W32\'''ct-Bot.exe''''' (Windows) erstellt wurde
          * Falls ja, funktionieren die Standard-Einstellungen
          * Falls nein, gibt das Teilfenster „Console“ in Eclipse manchmal Hinweise, was fehlt. Folgende Maßnahmen sollten helfen:[[BR]]
             * Es muss sichergestellt sein, dass über die Path-Variable des Systems mindestens gcc und make (Linux) bzw. gcc und mingw32-make (Windows) gefunden werden können. – Alternative: unter „!Project/Properties/C C++ Build“ die Pfade zu Compiler („Tool Settings/GCC C Compiler“), Linker („Tool Settings/GCC C Linker“) und make („Build settings/Build command“) manuell eintragen.[[BR]]
             * Unter Windows müssen eventuell unter „!Project/Properties/C C++ Build“ vier Pfade angepasst werden, wenn man in der Installation der Unix-Umgebung untypische Installationsorte gewählt hat. Unter „GCC C !Compiler/Directories“ den Pfad zum MinGW\include-Verzeichnis und zum pthreads\pthreads.2-Verzeichnis prüfen, sowie unter „GCC C !Linker/Libraries“ die Pfade zum MinGW\lib- und pthreads\Pre-built.2\lib-Verzeichnis.
          * Vorsicht unter Windows: Wenn im System bereits ein anderes C-Compiler-Paket installiert ist – etwa von Borland – kann es sein, dass dessen Compiler und make-Äquivalent gemäß Reihenfolge im Path bevorzugt werden. Das c't-Bot-Projekt geht davon aus, mit mingw32-make.exe und dem gcc kompiliert zu werden.

Zum Testen im Simulator siehe [wiki:Installationsanleitung#sim-bot-starten c't-Sim inkl. virtueller Bots starten].

Per Rechtsklick auf das Projekt und das Auswählen von „!Team/Update“ kann der Quelltext jederzeit wieder vom SVN-Server heruntergeladen, d.h. auf den neuesten Stand gebracht werden.

[[BR]]

== Aufbau des Repositories ==

 1. '''[/trac/ctbot/browser/stable stable]''': Hier liegt lauffähiger Code, der aber vielleicht nicht das Cutting Edge der Entwicklung enthält.
 1. [/trac/ctbot/browser/devel devel]: Cutting-Edge-Code. Keine Garantie für gar nix. Eventuell gibt es hier auch mal Änderungen, die ungetestet sind oder bald wieder verschwinden.
 1. [/trac/ctbot/browser/snapshots snapshots]: Hier liegen Snapshots von bestimmten Versionen, unter anderem alle bisherigen Releases von ct-Bot und ct-Sim aus dem CVS.
 1. [/trac/ctbot/browser/ziped-releases ziped-releases]: Hier liegen die Binaries als zip-Archive.

in (fast) jedem dieser Verzeichnisse liegt dann ein Repository für den Bot und den Sim, das Eclipse direkt verarbeiten kann.

P.S. Den ct-Sim_V2 gibt es nicht mehr, der heißt nun einfach wieder ct-Sim.

[[BR]]

== Ältere Code-Versionen ==

Möchte man auf eine ältere Version des Codes aus dem SVN wechseln, so kann man das wie folgt tun:[[BR]]
Rechtsklick auf das Projekt => "Replace With" => "!Branch/Tag" => "Revision" auswählen => "Show Log" => "Get All".[[BR]]
Durch Klick auf die Spaltenüberschriften lässt sich die Liste entsprechend umsortieren.[[BR]]
Nun wähl man die gewünschte Version aus und bestätigt zweimal mit OK. Vorhandene Änderungen gehen dabei verloren.[[BR]]
Die Funktion "Compare With" lässt sich analog benutzen.

[[BR]]
