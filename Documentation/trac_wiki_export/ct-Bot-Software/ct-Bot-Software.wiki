[[PageOutline(1-999)]]

= Software des c't-Bot =
Diese Seite befasst sich mit der Software des c't-Bots. Für die meisten Punkte gilt: Es gibt keinen Unterschied zwischen simulierten und realen Bots. Dennoch richten sich ein paar Absätze hauptsächlich an Besitzer realer Bots

== Schnelleinstieg ==
Einen ersten Eindruck vom Projekt vermitteln die '''[wiki:FirstSteps Firststeps]''', '''[wiki:WikiStart#Anlaufstellen allgemeine Infos und Anlaufstellen]''' sind auf der Hauptseite verlinkt

== Vorraussetzungen ==
Soll es mit dem eigenen Code richtig losgehen, sind erst einmal ein paar Vorraussetzungen zu schaffen.
 1. Bitte einmal die [wiki:InstallationsanleitungR23 Installationsanleitung] durchgehen
 1. Code aus dem Repositiory [wiki:SVNUndEclipse holen]
Nun braucht man entweder einen [wiki:ct-Bot-Hardware realen Bot] oder einen laufenden [wiki:ct-Sim]


== Erste Geh- und Modifikationsversuche mit der Demo-Firmware ==
Damit die hier beschriebenen Schritte Sinn ergeben, sollte man entweder einen '''[wiki:ct-Bot-Hardware realen Bot]''' '''[wiki:ct-Bot-Hardware#AufbauMontage aufgebaut] und [wiki:ct-Bot-Hardware#Testeinesfrischaufgebautenct-Bots erfolgreich getestet]''' haben. Solange die beschriebenen Testprogramme nicht einwandfrei laufen, handelt man sich mit unten beschriebenen Gehversuchen nur Ärger und Frust ein. Auch die empfohlenen '''[wiki:ct-Bot-Modifikationen Hardware-Mods]''' sollten eingebaut sein. [[BR]]
'''Bitte beachten:''' Die auf dem Display angezeigten absoluten Sensorwerte sind nicht korrekt, solange die [[#Kalibrierung]] noch nicht durchgeführt wurde! Gleiches gilt für den Gleichlauf der Motoren.

Alle erwähnten Code-Optionen finden sich in ''[source:devel/ct-Bot/ct-Bot.h ct-Bot.h]''. Siehe auch: [wiki:ctBotH Übersicht der optionalen Codeteile]

Nach jeder Änderung am Code muss dieser übersetzt (ct-Bot.hex) und auf den Bot '''[wiki:Flash übertragen]''' werden. Eventuell muss auch das EEPROM-Abbild mit dort hin.

=== Kalibrierung ===
Damit der Demo-Code korrekt arbeitet sind ein paar Anpassungen an den eigenen Bot und dessen Umgebung nötig:
  1. Wenn noch nicht geschehen: Die Fernbedienung (falls das Modell ''HQ RC Univers 29'' verwendet wird) auf den Gerätecode '''TV 334''' (siehe beiliegende Anleitung) programmieren. Wer diese Fernbedienung mit vierstelligen Gerätecodes (siehe Anleitung) besitzt, sollte unseren [wiki:FirstSteps#Support Support] kontaktieren - der Gerätecode 334 funktioniert hier nicht.
  1. '''[wiki:ct-Bot-Software-Sensoren#Abgrundsensoren Abgrundsensoren]''' kalibrieren
  1. Bei Bedarf '''[wiki:ct-Bot-Software-Sensoren#Liniensensoren Liniensensoren]''' kalibrieren
  1. '''[wiki:ct-Bot-Software-Sensoren#Distanzsensoren Distanzsensoren]''' kalibrieren
  1. Bei Bedarf: '''[wiki:ct-Bot-Software-Sensoren#Maussensor Maussensor tunen]'''
  1. '''[wiki:ct-Bot-Software-Aktuatoren#Motoren Motorregelung]''' kalibrieren

=== Und los geht es ===
Nun sind alle Sensoren kalibriert und man kann mit den Verhalten im Beispielcode spielen:
  1. gewünschte Code-Optionen in ''[source:devel/ct-Bot/ct-Bot.h ct-Bot.h]'' ein- oder ausschalten: [wiki:ctBotH Übersicht der optionalen Codeteile]
  1. gewünschte Verhalten in ''[source:devel/ct-Bot/include/bot-logic/available_behaviours.h include/bot-logic/available_behaviours.h]'' auswählen: [wiki:Verhalten Übersicht der verfügbaren Verhalten]

=== Erweiterungsmodul ===
Wenn das Erweiterungsmodul vorhanden ist:
  1. MMC / SD-Karten Unterstützung aktivieren: im Bot-Code ''[source:stable/ct-Bot/ct-Bot.h ct-Bot.h]'' die Zeile {{{//#define MMC_AVAILABLE}}} einkommentieren. Danach prüfen, ob unter ''[source:stable/ct-Bot/ui/available_screens.h ui/available_screens.h]'' {{{#define DISPLAY_MMC_INFO}}} aktiviert ist und anschließend den Bot-Code neu kompilieren. Nach dem Flashen des Bots sollte die Bot-Display-Seite für die MMC-Display-Seite anzeigen, ob die Speicherkarte erkannt wird, andernfalls meldet die MMC-Display-Seite den Fehler {{{MMC not init (x)}}}, wobei ''x'' den Fehlercode darstellt.
  1. Die SD-Karte mit FAT16 oder FAT32 formatieren. [[BR]][[BR]]
  '''Hinweise''':
     * Die Abkürzung ''MMC'' wird im ct-Bot Kontext generell für ''SD- oder Multimedia-Card'' verwendet und meint explizit '''nicht''' [https://de.wikipedia.org/wiki/Multimedia_Card Multimedia Card]-spezifische Dinge (genau genommen hat das Erweiterungsmodul des ct-Bots einen [https://de.wikipedia.org/wiki/SD-Karte SD-Karten]-Steckplatz, der abwärtskompatibel zu Multimedia Cards ist).
     * Die Fehlermeldung {{{MMC/SD not init (1)}}} ermöglicht keine Unterscheidung darüber, ob nur die SD-Karte nicht erkannt wird, oder aber auch die Erweiterungsplatine selbst nicht erkannt wird. Andere Fehlercodes als 1 deuten auf ein Problem mit der Erkennung der SD-Karte hin.
     * Die Optionen ''MAP_AVAILABLE'' sollte für den ersten Test '''aus''' sein.
     * Mögliche Fehlercodes (Stand Release 25):
       * 1: Die Karte antwortet nicht. Das kann auch bedeutet, dass gar keine Karte eingesteckt ist, die Verbindung unterbrochen ist oder ein anderer (elektrischer) Fehler auf dem Erweiterungsboard vorliegt.
       * 2: Die Karte hat zwar geantwortet, die anschließende Initialisierung schlug aber fehl. Evtl. ist die Karte defekt oder inkompatibel.
     * Seit Release 25 werden auch (micro) SDHC und SDXC Karten unterstützt. Außerdem wird ein FAT16 und FAT32 Dateisystem unterstützt (das ehemalige ''BOT_FS_AVAILABLE'' wurde hier durch ''SDFAT_AVAILABLE'' ersetzt). SDXC Karten müssen auf jeden Fall mit FAT32 formatiert sein, exFAT wird nicht unterstützt. Karten > 64GB sind bisher ungetestet. [[BR]][[BR]]

=== Eigene Schritte ===
Wenn die Beispielverhalten funktionieren, kann man beginnen, eigene zu programmieren.
  1. c't-Artikel: [http://www.heise.de/ct/artikel/Hohe-Schule-290392.html Programmierung] des (virtuellen) c't-Bot
  1. c't-Artikel: [http://www.heise.de/ct/artikel/Ausgang-gesucht-290460.html Tutorial] für die Programmierung des c't-Bot
  1. c't-Artikel: [http://www.heise.de/ct/artikel/Genesis-290480.html Eigene Welten] für den c't-Sim
  1. c't-Artikel: [http://www.heise.de/ct/artikel/An-der-naechsten-Ecke-links-290662.html Kartographie] für den c't-Bot
  1. [http://www.heise.de/ct/artikel/FAQ-fuer-c-t-Bot-und-c-t-SIM-291940.html FAQ-Einträge]

== Dokumentation ==
    * Übersicht und Beschreibung der konfigurierbaren [wiki:ctBotH Optionen] des Bot-Codes
    * Übersicht der im Code verfügbaren [wiki:Verhalten Roboterverhalten]
    * Funktionsweise und Kalibrierung der [wiki:ct-Bot-Software-Sensoren Sensoren] des c't-Bot
    * Funktionsweise und Kalibrierung der [wiki:ct-Bot-Software-Aktuatoren Aktuatoren] des c't-Bot
    * Doxygen [source:devel/ct-Bot/Documentation/api Dokumentation] des Codes
    * Dokumentation der [wiki:RemoteCall Remote-Calls]
    * Dokumentation zum [wiki:DokuProtocol ct-Bot-Protokoll]
    * Dokumentation zur [wiki:DokuBot2Bot Bot-2-Bot-Kommunikation]
    * Dokumentation zum [wiki:DokuOS c't-Bot-Betriebssystem]
    * Dokumentation zum Verhalten [wiki:DokuLineShortestWay bot_line_shortest_way]
    * Dokumentation zum [wiki:DokuPathplaning Pfadplanungsverhalten]
    * Dokumentation zum Verhalten [wiki:DokuDriveArea bot_drive_area]
    * Dokumentation zur [wiki:Localization Lokalisierung]
    * Dokumentation zur [wiki:DokuScriptLanguages Programmierung des c't-Bots in weiteren Programmiersprachen]

=== Deprecated Doku ===
   * Alte [wiki:Installationsanleitung Installationsanleitung] vor Release 23
   * Dokumentation zum [wiki:DokuBotFs SD-Karten Dateisystem BotFS]
   * Dokumentation zur [wiki:DokuMmcVm Virtuellen Speicherverwaltung] für SD-Karten
   * Dokumentation zur [wiki:DokuEepromEmu EEPROM-Emulation] für simulierte Bots

== Howto ==
   * [wiki:Flash Firmware] auf den c't-Bot übertragen
   * [wiki:Logging Protokollieren] von Messdaten vom c't-Bot aus
   * [wiki:AVRToolchainInterna Hintergründe] zur AVR-Toolchain
   * [wiki:Utils AVR-Tools und Tricks] für die (Bot-)Softwareentwicklung


== Ideen & mehr ==
 * [wiki:NeueVerhalten Ideen und Diskussionen] für neue Verhalten und Aufgaben
